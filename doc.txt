理解 NodeList 及其“近亲”NamedNodeMap 和 HTMLCollection，是从整体上透彻理解 DOM 的 关键所在。
这三个集合都是“动态的”;换句话说，每当文档结构发生变化时，它们都会得到更新。因 此，它们始终都会保存着最新、最准确的信息。

[NodeList]
每个节点都有一个 childNodes 属性，其中保存着一个 NodeList 对象。
NodeList 是一种类数组对象，用于保存一组有序的节点，可以通过位置来访问这些节点。
请注意，虽然可以通过方括号语法来 访问 NodeList 的值，而且这个对象也有 length 属性，但它并不是 Array 的实例。
NodeList 对象的 独特之处在于，它实际上是基于 DOM 结构动态执行查询的结果，因此 DOM 结构的变化能够自动反映 在 NodeList 对象中.

[HTMLCollection]
var images = document.getElementsByTagName("img");
这行代码会将一个 HTMLCollection对象保存在images变量中。
与 NodeList 对象类似可以使用方括号语法或item()方法
来访问HTMLCollection对象中的项。
而这个对象中元素的数量则可以通过其length属性取得，如下面的例子所示。
 alert(images.length);
 alert(images[0].src);
 alert(images.item(0).src);

HTMLCollection对象还有一个方法叫做 namedItem()，
使用这个方法可以通过元素的 name 特性取得集合中的项。
例如，假设上面提到的页面中包含如下<img>元素:
    <img src="myimage.gif" name="myImage">
那么就可以通过如下方式从 images 变量中取得这个<img>元素:
    var myImage = images.namedItem("myImage");
  在提供按索引访问项的基础上，HTMLCollection还支持按名称访问项，
  这就为我们取得实际想要的元素提供了便利。
  而且，对命名的项也可以使用方括号语法来访问，如下所示:
 var myImage = images["myImage"]


【nodeName || nodeValue(针对属性节点才有该值，元素节点为空)】

  nodeName 通常我们常见是的返回属性节点名称，如test文件中的第一个  
  console.log(inp.nodeName);   
  其实针对当前不同的对象，nodeName会返回不一样的值
  （1）如果节点是元素节点，那么nodeName属性返回的就是元素标签名
  （2）如果节点是属性节点，也就是inp.attributes返回的属性对象，那么nodeName
  返回的就是属性名

  这里有一点非常关键就是DOM中包含了Attr类型，这也就是为什么可以使用nodeName来查找属性
  使用 document.createAttribute()并传入特性的名称可以创建新的特性节点。
  例如，要为元素 添加 align 特性，可以使用下列代码:
    var attr = document.createAttribute("align");
    attr.value = "left";
    element.setAttributeNode(attr);
    alert(element.attributes["align"].value);
    alert(element.getAttributeNode("align").value); //"left"
    alert(element.getAttribute("align")); 

  【2.attributes && NameNodeMap】
  attributes属性中包含一个NameNodeMap,与NodeList类似，也是一个动态的集合
  【元素的每一个特殊都有一个Attr节点表示】,每个节点都保存在NameNodeMap对象中
  该对象拥有以下方法：
  getNameItem(name): 返回nodename属性等于name的节点
  removeNamedItem(name): 移除指定属性节点
  setNamedItem(node): 添加属性节点
  item(pos): 返回位于数字pos位置处的节点
  目前更加常用的是：getAttribute()、removeAttribute()和 setAttribute()方法


  【元素遍历重要的API】
  childElementCount:返回子元素(不包括文本节点和注释)的个数。  
  firstElementChild:指向第一个子元素;firstChild 的元素版。
  lastElementChild:指向最后一个子元素;lastChild 的元素版。
  previousElementSibling:指向前一个同辈元素;previousSibling 的元素版。
  nextElementSibling:指向后一个同辈元素;nextSibling 的元素版
